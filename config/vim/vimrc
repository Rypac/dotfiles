" -----------------------------------------------------
" Plugins

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'scrooloose/nerdtree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'terryma/vim-multiple-cursors'
Plug 'scrooloose/syntastic'
Plug 'Valloric/YouCompleteMe' | Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'editorconfig/editorconfig-vim'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'rust-lang/rust.vim'
Plug 'elmcast/elm-vim'
Plug 'neovimhaskell/haskell-vim'
Plug 'elixir-lang/vim-elixir'
Plug 'altercation/vim-colors-solarized'
Plug 'chriskempson/base16-vim'
Plug 'vim-airline/vim-airline' | Plug 'vim-airline/vim-airline-themes'

call plug#end()

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_loc_list_height = 2

" Ctrl-P
let g:ctrlp_show_hidden = 1
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']

" GitGutter
let g:gitgutter_sign_column_always=1

" Rust
let g:rustfmt_autosave = 1

" Haskell
let g:haskell_indent_case = 4
let g:haskell_indent_guard = 4
let g:haskell_indent_if = 4
let g:haskell_indent_in = 4
let g:haskell_indent_let = 4
let g:haskell_indent_do = 4

" Elm
let g:elm_detailed_complete = 1
let g:elm_format_autosave = 1
let g:elm_setup_keybindings = 0
let g:elm_syntastic_show_warnings = 1
au Filetype elm nmap <leader>m <Plug>(elm-make)
au Filetype elm nmap <leader>r <Plug>(elm-repl)
au Filetype elm nmap <leader>d <Plug>(elm-show-docs)

" Airline
let g:airline_theme = 'base16'

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_confirm_extra_conf = 0

" -----------------------------------------------------
" Options

" UI
set number
set cursorline
set showmatch
set matchtime=2
set whichwrap+=<,>,h,l

" Searching
set ignorecase
set smartcase

" Tabs
set splitbelow
set splitright

" Colour scheme
set background=dark
let base16colorspace=256
colorscheme base16-ocean

" Always replace tabs with 4 spaces
retab
set expandtab
set shiftwidth=4
set tabstop=4

" Indentation
set smartindent
set wrap

" Ignore certain files and directories
set wildignore+=*.o,*~,*.pyc,*/.git/*,*/node_modules/*
set noswapfile

" -----------------------------------------------------
" Keybindings

" Quick leader actions
let maplocalleader = "\\"

" Disable highlight
nnoremap <silent> <Esc> :nohlsearch<Bar>:echo<cr>
nnoremap <silent> <localleader><space> :noh<cr>

" Fast actions
nmap <localleader>w :write<cr>
nmap <localleader>x :exit<cr>
nmap <localleader>q :quit<cr>
nmap <localleader>Q :quitall<cr>

let mapleader = "\<space>"

" Window layer
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
nmap <leader>wj <C-W>j
nmap <leader>wk <C-W>k
nmap <leader>wh <C-W>h
nmap <leader>wl <C-W>l
nmap <leader>wnj :rightbelow :split<cr>
nmap <leader>wnk :leftabove :split<cr>
nmap <leader>wnh :leftabove :vsplit<cr>
nmap <leader>wnl :rightbelow :vsplit<cr>
nmap <leader>w<C-j> :rightbelow :split<cr>
nmap <leader>w<C-k> :leftabove :split<cr>
nmap <leader>w<C-h> :leftabove :vsplit<cr>
nmap <leader>w<C-l> :rightbelow :vsplit<cr>
nmap <leader>wnn :vnew<cr>
nmap <leader>wns <C-W>R
nmap <leader>w= <C-W>=
nmap <leader>wq :quit<cr>

" Tab layer
nmap <leader><C-h> :tabprevious<cr>
nmap <leader><C-l> :tabnext<cr>
nmap <leader>th :tabprevious<cr>
nmap <leader>tl :tabnext<cr>
nmap <leader>tn :tabnew<cr>
nmap <leader>to :tabonly<cr>
nmap <leader>tq :tabclose<cr>
nmap <leader>tm :tabmove<cr>

" Git layer
nmap <leader>gs :Gstatus<cr>
nmap <leader>gb :Gblame<cr>
nmap <leader>gl :Glog<cr>
nmap <leader>gg :Gbrowse<cr>
nmap <leader>gd :Gdiff<cr>
nmap <leader>gf :Gfetch<cr>
nmap <leader>gp :Gpull<cr>

" Jump to definition/between headers
map <F2> gD
map <F4> :e %:p:s,.hpp$,.X123X,:s,.cpp$,.hpp,:s,.X123X$,.cpp,<cr>

" Nerdtree
map <C-m> :NERDTreeToggle<cr>
map <F3> :NERDTreeToggle<cr>

" Ctrl-P
map <F9> :CtrlP<cr>
