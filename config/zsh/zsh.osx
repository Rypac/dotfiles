# Node
if [ -d "$HOME/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
    source "$NVM_DIR/nvm.sh"
fi

# Ruby
if type rbenv > /dev/null 2>&1; then
    eval "$(rbenv init -)"
    alias rbenv-override="rbenv shell $(rbenv global)"
fi

# Go
if type go > /dev/null 2>&1; then
    export PATH=$PATH:/usr/local/opt/go/libexec/bin
fi

# Python
if type pip > /dev/null 2>&1; then
    alias pip-upgrade="pip list --outdated | cut -d ' ' -f 1 | xargs -n 1 pip install --upgrade"
fi

# GPG Agent
if [ -f ~/.gnupg/gpg-agent-info ]; then
    source ~/.gnupg/gpg-agent-info
fi

# GPG
export GPG_TTY=$(tty)
if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
    export GPG_AGENT_INFO
else
    eval $(gpg-agent --daemon --write-env-file ~/.gnupg/gpg-agent-info)
fi

export BROWSER='open'

# Rust
export RUST_SRC_PATH="$HOME/Developer/cloned/rust/rust-lang/src"

# Android SDK/NDK
export ANT_ROOT=/usr/local/Cellar/ant/1.9.7/bin
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home
export ANDROID_HOME="$HOME/Library/Android/sdk"
export ANDROID_SDK_ROOT="$ANDROID_HOME"
export ANDROID_NDK="$HOME/Library/Android/crystax-ndk"
export NDK_ROOT="$ANDROID_NDK"
export PATH="$PATH:$JAVA_HOME:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"

# Cocos2d-x
alias cocos="$HOME/Developer/projects/pulse/libs/cocos2d/tools/cocos2d-console/bin/cocos"
alias fbx-conv="$HOME/Developer/projects/pulse/libs/cocos2d/tools/fbx-conv/mac/fbx-conv"

# Aliases
alias f='open -a Finder ./'

# Package manager
alias appupdate='brew update && brew upgrade'
alias appinstall='brew install'
alias appremove='brew uninstall'
alias appsearch='brew search'
alias appclean='brew cleanup && brew cask cleanup && brew prune'
alias appdoctor='brew doctor && brew cask doctor'

# ls colours
export LSCOLORS='exfxcxdxbxGxDxabagacad'
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'
alias ls='ls -G'

# Moves a file to the MacOS trash
function trash() {
    command mv "$@" ~/.Trash
}

# Opens any file in Preview
function ql() {
    qlmanage -p "$*" > /dev/null 2>&1
}
