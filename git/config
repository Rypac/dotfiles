[user]
    name = Ryan Davis
    email = me@rdavis.xyz
    signingkey = me@rdavis.xyz

[github]
    user = Rypac

[color]
    ui = true

[core]
    editor = nvim

[alias]
    # Aliases
    alias = !git config -l | grep alias | cut -c 7-

    # Status
    s = status
    st = status
    sl = status --long
    ss = status --short
    sd = status -v
    si = status --ignore-submodules=dirty

    # Logs
    lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    ls = log --pretty=format:"%C(yellow)%h%C(red)%d\\ %Creset%s\\ %C(blue)[%cn]" --decorate
    lc = log --pretty=format:"%C(yellow)%h%C(red)%d\\ %Creset%s\\ %C(blue)[%cn]" --decorate --numstat
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%C(red)%d\\ %Creset%s\\ %C(blue)[%cn]" --decorate --date=short
    lr = log --pretty=format:"%C(yellow)%h\\ %ad%C(red)%d\\ %Creset%s\\ %C(blue)[%cn]" --decorate --date=relative
    lf = log -u

    # Diffs
    d = diff
    da = diff HEAD

    # Searching
    f = !git ls-files | grep -i
    grep = grep -Ii

    # Branches
    co = checkout
    b = checkout
    bn = checkout -b
    bd = branch --delete
    brd = push origin --delete

    # Staging
    a = add
    aa = add -A

    # Commits
    cs = commit -S
    cm = commit -m
    cms = commit -S -m
    cmso = commit -s -m
    save = !git add -A && git commit -m 'Save progress'

    # Fixing things
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend

    # Fun commits
    yolo = "!git add -A && git commit -m yolo"
    wtf = "!git add -A && git commit -m \"$(curl -s whatthecommit.com/index.txt)\""
    fortune = "!git add -A && git commit -m \"$(fortune -sn 64 | tr '[\\n|\\t]' '\\ ')#fortune\""

    # Submodules
    subdiff = !git diff && git submodule foreach 'git diff'
    subpush = push --recurse-submodules=on-demand
    subinit = submodule update --init --recursive
    subpull = submodule update --init --remote --merge

[push]
    default = simple

[gpg]
    program = gpg2
