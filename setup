#!/usr/bin/env bash

set -e

function confirmation_prompt() {
    message="$1"
    default="${2:-Y}"
    while true; do
        read -p "${message} [Y/n] " input
        case "${input:-$default}" in
            [Yy]|[Yy][Ee][Ss])
                return 0
                ;;
            [Nn]|[Nn][Oo])
                return 1
                ;;
            *)
                echo "Invalid selection"
                ;;
        esac
    done
}

function install_apt_packages() {
    sudo apt install --yes \
        alsa-base \
        alsa-tools \
        alsa-utils \
        apt-listbugs \
        apt-listchanges \
        arandr \
        autoconf \
        automake \
        borgbackup \
        checkinstall \
        clang \
        clang-format \
        clipit \
        cmake \
        cmatrix \
        cmatrix-xfont \
        cmus \
        compton \
        cowsay \
        curl \
        dex \
        docker-engine \
        dunst \
        feh \
        firmware-linux \
        firmware-linux-free \
        firmware-linux-nonfree \
        fonts-font-awesome \
        fonts-noto \
        fonts-symbola \
        fortune \
        g++ \
        git \
        htop \
        i3 \
        imagemagick \
        kpcli \
        keepassx \
        lightdm \
        lightdm-gtk-greeter \
        lm-sensors \
        lxappearance \
        make \
        menu \
        mpv \
        neovim \
        ntfs-3g \
        pavucontrol \
        pcmanfm \
        pinentry-curses \
        pkg-config \
        pasystray \
        pulseaudio \
        pulseaudio-utils \
        ranger \
        rofi \
        rxvt-unicode \
        scrot \
        sudo \
        tig \
        unrar \
        vim \
        wget \
        xarchiver \
        xcb \
        xclip \
        xorg \
        zathura \
        zip \
        zsh \
        libasound2-dev \
        libev-dev \
        libnotify-bin \
        libpango1.0-0 \
        libpango1.0-dev \
        libssl-dev \
        libstartup-notification0-dev \
        libxcb-cursor-dev \
        libxcb-ewmh-dev \
        libxcb-icccm4-dev \
        libxcb-keysyms1-dev \
        libxcb-randr0-dev \
        libxcb-util0-dev \
        libxcb-xrm-dev \
        libxcb-xinerama0-dev \
        libxcb-xkb-dev \
        libxcb1-dev \
        libxft2 \
        libxkbcommon-dev \
        libxkbcommon-x11-dev \
        libxslt1.1 \
        libyajl-dev
}

function clone_github_repo() {
    repo="$1"
    name="$2"
    if [ ! -d "$name" ]; then
        git clone --recursive "https://github.com/$repo" "$name"
    fi
}

function clone_git_packages() {
    git_package_dir="$HOME/packages/cloned"
    mkdir -p "$git_package_dir"
    cd "$git_package_dir"
    clone_github_repo Airblader/i3.git i3-gaps
    clone_github_repo vivien/i3blocks.git i3blocks
    clone_github_repo baskerville/xtitle.git xtitle

    plug_vim="$HOME/.vim/autoload/plug.vim"
    if [ ! -f "$plug_vim" ]; then
        curl -fLo "$plug_vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
}

function install_fonts() {
    mkdir -p "$XDG_DATA_HOME/fonts"
    curl -L https://github.com/chrissimpkins/codeface/releases/download/font-collection/codeface-fonts.tar.xz | tar xJ -C /tmp
    mv /tmp/fonts/* "$XDG_DATA_HOME/fonts"
    rm -rf /tmp/fonts
    fc-cache -frv
}

function configure_environment() {
    chsh -s /bin/zsh
    sudo update-alternatives --set x-terminal-emulator /usr/bin/urxvt
    sudo update-ca-certificates --fresh
    sudo mkdir -p /etc/X11/xorg.conf.d
    sudo mkdir -p /etc/udev/rules.d
    sudo cp -r "$DOTFILES_HOME/config/xorg/." /etc/X11/xorg.conf.d/
    sudo cp -r "$DOTFILES_HOME/config/rules/." /etc/udev/rules.d/
    sudo cp -r "$DOTFILES_HOME/config/urxvt/." /usr/lib/urxvt/perl/
}

function no_confirmation() {
    [ "$1" = "-y" ] || [ "$1" = "--yes" ]
}

source "$HOME/.profile"

if no_confirmation "$1" || confirmation_prompt "Install packages?"; then
    install_apt_packages
fi
if no_confirmation "$1" || confirmation_prompt "Clone and install external packages?"; then
    clone_git_packages
fi
if no_confirmation "$1" || confirmation_prompt "Install fonts?"; then
    install_fonts
fi
if no_confirmation "$1" || confirmation_prompt "Configure environment?"; then
    configure_environment
fi
