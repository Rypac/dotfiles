return {
  {
    "tpope/vim-fugitive",
    cmd = {
      "Git",
      "G",
    },
    keys = {
      { "<leader>gs", "<cmd>Git<cr>", desc = "Status" },
      { "<leader>gb", "<cmd>Git blame<cr>", desc = "Blame" },
      { "<leader>gl", "<cmd>Git log<cr>", desc = "Log" },
      { "<leader>gf", "<cmd>Git fetch<cr>", desc = "Fetch" },
      { "<leader>gp", "<cmd>Git pull<cr>", desc = "Pull" },
      { "<leader>gP", "<cmd>Git push<cr>", desc = "Push" },
      { "<leader>gr", "<cmd>Git rebase<cr>", desc = "Rebase" },
      { "<leader>gr", "<cmd>Git revert<cr>", desc = "Revert" },
      { "<leader>gm", "<cmd>Git merge<cr>", desc = "Merge" },
    },
  },
  {
    "ldelossa/gh.nvim",
    dependencies = {
      "ldelossa/litee.nvim",
    },
    cmd = {
      "GHCloseCommit",
      "GHExpandCommit",
      "GHOpenToCommit",
      "GHPopOutCommit",
      "GHCollapseCommit",
      "GHPreviewIssue",
      "GHSearchIssues",
      "GHApproveReview",
      "GHStartReview",
      "GHCloseReview",
      "GHDeleteReview",
      "GHExpandReview",
      "GHSubmitReview",
      "GHCollapseCommit",
      "GHClosePR",
      "GHPRDetails",
      "GHExpandPR",
      "GHOpenPR",
      "GHPopOutPR",
      "GHRefreshPR",
      "GHSearchPRs",
      "GHOpenToPR",
      "GHCollapsePR",
      "GHCreateThread",
      "GHNextThread",
      "GHToggleThread",
      "GHViewWeb",
      "GHNotifications",
    },
    keys = {
      { "<leader>ghcc", "<cmd>GHCloseCommit<cr>", desc = "Close" },
      { "<leader>ghce", "<cmd>GHExpandCommit<cr>", desc = "Expand" },
      { "<leader>ghco", "<cmd>GHOpenToCommit<cr>", desc = "Open To" },
      { "<leader>ghcp", "<cmd>GHPopOutCommit<cr>", desc = "Pop Out" },
      { "<leader>ghcz", "<cmd>GHCollapseCommit<cr>", desc = "Collapse" },
      { "<leader>ghip", "<cmd>GHPreviewIssue<cr>", desc = "Preview" },
      { "<leader>ghis", "<cmd>GHSearchIssues<cr>", desc = "Search" },
      { "<leader>ghra", "<cmd>GHApproveReview<cr>", desc = "Approve" },
      { "<leader>ghrb", "<cmd>GHStartReview<cr>", desc = "Begin" },
      { "<leader>ghrc", "<cmd>GHCloseReview<cr>", desc = "Close" },
      { "<leader>ghrd", "<cmd>GHDeleteReview<cr>", desc = "Delete" },
      { "<leader>ghre", "<cmd>GHExpandReview<cr>", desc = "Expand" },
      { "<leader>ghrs", "<cmd>GHSubmitReview<cr>", desc = "Submit" },
      { "<leader>ghrz", "<cmd>GHCollapseCommit<cr>", desc = "Collapse" },
      { "<leader>ghpc", "<cmd>GHClosePR<cr>", desc = "Close" },
      { "<leader>ghpd", "<cmd>GHPRDetails<cr>", desc = "Details" },
      { "<leader>ghpe", "<cmd>GHExpandPR<cr>", desc = "Expand" },
      { "<leader>ghpo", "<cmd>GHOpenPR<cr>", desc = "Open" },
      { "<leader>ghpp", "<cmd>GHPopOutPR<cr>", desc = "Pop Out" },
      { "<leader>ghpr", "<cmd>GHRefreshPR<cr>", desc = "Refresh" },
      { "<leader>ghps", "<cmd>GHSearchPRs<cr>", desc = "Search" },
      { "<leader>ghpt", "<cmd>GHOpenToPR<cr>", desc = "Open To" },
      { "<leader>ghpz", "<cmd>GHCollapsePR<cr>", desc = "Collapse" },
      { "<leader>ghtc", "<cmd>GHCreateThread<cr>", desc = "Create" },
      { "<leader>ghtn", "<cmd>GHNextThread<cr>", desc = "Next" },
      { "<leader>ghtt", "<cmd>GHToggleThread<cr>", desc = "Toggle" },
      { "<leader>ghv", "<cmd>GHViewWeb<cr>", desc = "View In Browser" },
      { "<leader>ghn", "<cmd>GHNotifications<cr>", desc = "Notifications" },
    },
    config = function()
      require("litee.lib").setup()
      require("litee.gh").setup()
    end,
  },
  {
    "sindrets/diffview.nvim",
    cmd = {
      "DiffviewOpen",
      "DiffviewClose",
      "DiffviewFileHistory",
      "DiffviewFocusFiles",
      "DiffviewToggleFiles",
    },
    dependencies = {
      "nvim-lua/plenary.nvim",
    },
    opts = {
      use_icons = false,
    },
    keys = {
      { "<leader>gdo", "<cmd>DiffviewOpen<cr>", desc = "Diff" },
      { "<leader>gdf", "<cmd>DiffviewFileHistory %<cr>", desc = "File History" },
      { "<leader>gdb", "<cmd>DiffviewFileHistory<cr>", desc = "Branch History" },
    },
  },
}
